name: CVE Check

# Dedicated CVE vulnerability checking
# Runs on schedule and can be triggered manually

on:
  schedule:
    # Run every day at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'python/requirements.txt'

permissions:
  contents: read
  issues: write
  security-events: write

jobs:
  npm-cve-check:
    name: NPM CVE Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run audit for critical vulnerabilities
        id: audit
        run: |
          pnpm audit --audit-level=critical --json > critical-audit.json || true
          CRITICAL_COUNT=$(cat critical-audit.json | jq '.metadata.vulnerabilities.critical // 0')
          HIGH_COUNT=$(cat critical-audit.json | jq '.metadata.vulnerabilities.high // 0')
          echo "critical=$CRITICAL_COUNT" >> $GITHUB_OUTPUT
          echo "high=$HIGH_COUNT" >> $GITHUB_OUTPUT

      - name: Check for critical vulnerabilities
        if: steps.audit.outputs.critical > 0
        run: |
          echo "::error::Found ${{ steps.audit.outputs.critical }} critical vulnerabilities!"
          pnpm audit --audit-level=critical
          exit 1

      - name: Create issue for high vulnerabilities
        if: steps.audit.outputs.high > 0 && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const audit = JSON.parse(fs.readFileSync('critical-audit.json', 'utf8'));
            
            const title = `ðŸ”’ Security Alert: ${audit.metadata.vulnerabilities.high} High Severity Vulnerabilities`;
            const body = `## Security Vulnerability Report
            
            **High Severity**: ${audit.metadata.vulnerabilities.high}
            **Moderate Severity**: ${audit.metadata.vulnerabilities.moderate}
            **Low Severity**: ${audit.metadata.vulnerabilities.low}
            
            ### Action Required
            Review and update vulnerable dependencies.
            
            Run \`pnpm audit\` locally for details.
            
            **Generated**: ${new Date().toISOString()}
            **Workflow**: ${context.workflow}
            `;
            
            // Check if issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'security,cve'
            });
            
            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['security', 'cve', 'high-priority']
              });
            }

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cve-audit-report
          path: critical-audit.json
          retention-days: 90

  python-cve-check:
    name: Python CVE Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install safety
        run: pip install safety

      - name: Check Python dependencies for CVEs
        run: |
          if [ -f python/requirements.txt ]; then
            safety check --file python/requirements.txt --json > python-cve.json || true
            safety check --file python/requirements.txt
          else
            echo "No Python requirements file found"
          fi

      - name: Upload Python CVE report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: python-cve-report
          path: python-cve.json
          retention-days: 90

  snyk-scan:
    name: Snyk Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --json-file-output=snyk-report.json

      - name: Upload Snyk report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snyk-vulnerability-report
          path: snyk-report.json
          retention-days: 90
