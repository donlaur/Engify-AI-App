# AI Summary: CI pipeline for Python RAG service - type checking, testing, and health validation. Part of Day 5 Phase 2.

name: Python RAG Service CI

on:
  push:
    paths:
      - 'python/**'
      - '.github/workflows/python-rag-ci.yml'
  pull_request:
    paths:
      - 'python/**'
      - '.github/workflows/python-rag-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./python

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('python/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: Run type checking
      run: |
        pip install mypy
        mypy api/

    - name: Run linting
      run: |
        pip install black isort
        black --check --diff api/ tests/
        isort --check-only --diff api/ tests/

    - name: Run unit tests
      run: |
        pip install pytest pytest-asyncio pytest-mock
        pytest tests/ -v --tb=short

    - name: Run coverage
      run: |
        pip install coverage
        coverage run -m pytest tests/
        coverage report --fail-under=80

    - name: Health check test
      run: |
        pip install uvicorn
        # Start service in background
        uvicorn api.rag:app --host 0.0.0.0 --port 8000 &
        SERVER_PID=$!

        # Wait for service to start
        timeout 30 bash -c 'until curl -f http://localhost:8000/health; do sleep 1; done'

        # Test health endpoint
        curl -f http://localhost:8000/health

        # Cleanup
        kill $SERVER_PID || true

  build:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ./python

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Build package
      run: |
        pip install build
        python -m build

    - name: Test package installation
      run: |
        pip install dist/*.whl
        python -c "import api.rag; print('Package import successful')"

